<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kickstart on Wound:Abser&#39;s Blog</title>
    <link>https://blog.abser.top/tags/kickstart/</link>
    <description>Recent content in kickstart on Wound:Abser&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 24 Jan 2019 15:43:05 +0800</lastBuildDate>
    
	<atom:link href="https://blog.abser.top/tags/kickstart/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kickstart指南</title>
      <link>https://blog.abser.top/blog/kickstart%E6%8C%87%E5%8D%97/</link>
      <pubDate>Thu, 24 Jan 2019 15:43:05 +0800</pubDate>
      
      <guid>https://blog.abser.top/blog/kickstart%E6%8C%87%E5%8D%97/</guid>
      <description>Kick Start快速入门 Background Code Jam Kickstart 为同学们提供向 Google 展现自己专业能力以及走近 Google 的机会。在家就可以参加由 Google 的工程师们设计的算法题。通过参加线上测试，同学们可以直观地了解 Google 技术性岗位对编程能力的要求，也是参与 Google 校园招聘的入场券。
Requirement  G家邮箱一枚 科学上网工具 地址传送门（如果从codejam进入的话，选择分类中的kickstart）  Quickstart-Overview G家鼓励灵活的解决方案，所以施行的输入输出方案和其他的ACM在线测评不一样。
不是让你不断提交代码然后系统给你测试，而是给你数据集让你自己测试后在本地生成输出文件进行上传。
1. 下载题目数据集 .in 文件（小数据集4分钟变一次，大数据集8分钟变一次） 1. 解题并生成输出 .out 文件 1. 提交输出文件 和 代码源文件（练习测试不用提交）
PS. 每一道题都有小数据集和大数据集两个.in文件可供下载，大数据集的数据范围一般都比小数据集的范围更广，有更多的困难情况。
QuickStart 必要点  如果你想参加比赛，请在比赛期间访问你的比赛主页。如果您想练习，请访问“过去的问题”页面并选择一个回合。然后选择一个问题。
读问题，前面几段话将精确描述您的程序需要解决的问题。仔细注意极限部分。这些限制将帮助您确定处理大小数据集所需的解决方案类型。（通常会说明一些无解的数据不用考虑）
编写一个程序，在不到3分钟的时间内用所描述的小限制解决问题。确保您的程序接受输入并以给定的格式输出;如果您使用示例输入作为输入运行它，它应该准确地生成示例输出(包括“Case #”文本)。如果您不确定如何处理输入和输出，请参阅下面的标准I/O教程，了解可行的做法。
在页面顶部，单击以 solve A-small 并下载输入文件。在真正的比赛中，我们一收到下载请求就会启动一个4分钟的计时器。如果你在练习，就不会有计时器。
在该输入文件上运行程序，并将结果保存到文件中。将该文件作为输出文件提交。(在真正的比赛中，你还需要提交你的源代码。)服务器的响应方式有以下几种:
 正确示例:您提交的每个案例都完全正确!
 拒绝:您的提交被拒绝的原因与您的答案的正确性或不正确性无关。例如，您可能上传了一个输入文件或源代码，而不是您自己的输出文件。时钟仍然在运行，所以需要考虑您能否在超时之前修复这个问题(在这种情况下，您的提交将被视为不正确)。
 不正确：我们不会告诉您哪些情况是错误较小**的时间惩罚(但是解决问题总比不解决好，即使有惩罚!)
  在您解决小数据集之后，大数据集将变得可用。一旦您的程序准备好处理更高的限制，下载大型数据集。(参赛者通常只编写一个解决方案来解决两个数据集。)我们一收到下载请求就会启动一个8分钟的计时器。
与小数据集一样运行程序并提交，直到比赛结束你才知道你是否正确地解决了问题。如果您的提交被拒绝或您想提交另一个答案，您可以在8分钟的时间限制内再次尝试，但只有最后一次提交将被判定。
接着看另一个问题(左边有一个列表)。您正确解出的每个数据集都值下载链接旁边所写的点数。比赛结束时得分最多的选手排名最高。在一个小数据集上，每一次错误的提交最终被正确的回答，将会有4分钟的惩罚时间。为了引人注目，记分牌将显示“乐观”的初步结果,也就是说，它将假设每个大型提交都是正确的。比赛结束后，记分牌将显示真实的结果，包括哪些大的提交是错误的。
教程 我们现在只有一个教程，但我们将来可能会添加更多教程。虽然阅读理论很好，但我们强烈建议您练习解决实际问题以使其变得更好。您可以访问我们的 过去问题部分来完成此操作。For Fun！
“标准”解决方案：使用标准输入和输出 Kickstart鼓励灵活解决问题：我们会为您提供输入文件，并让您以自己喜欢的方式解决问题。您可以选择语言，开发环境，体系结构，库等。</description>
    </item>
    
  </channel>
</rss>